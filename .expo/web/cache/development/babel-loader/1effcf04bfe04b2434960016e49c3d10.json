{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yevheniia\\\\Documents\\\\Github_codes\\\\location_app_test\\\\my-app\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { setStatusBarHidden, StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Location from 'expo-location';\nimport { initializeApp } from \"firebase/app\";\nimport firebase from 'firebase';\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      locationLat = _useState2[0],\n      setLocationLat = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationLong = _useState4[0],\n      setLocationLong = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMsg = _useState6[0],\n      setErrorMsg = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      address = _useState8[0],\n      setAddress = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      clicked = _useState10[0],\n      setClicked = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      lastLocation = _useState12[0],\n      setLastLocation = _useState12[1];\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyBw0JiynMCdwmvU4R9HuB6mCOXCmwR8H0E\",\n    authDomain: \"locationapp-3efcb.firebaseapp.com\",\n    projectId: \"locationapp-3efcb\",\n    storageBucket: \"locationapp-3efcb.appspot.com\",\n    messagingSenderId: \"1020753340007\",\n    appId: \"1:1020753340007:web:31d1eeac64004d46bdd6c2\"\n  };\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  var db = firebase.firestore();\n  var fireAddress = db.collection(\"test\").doc(\"locWaWWxNtucZmAIU5py\");\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location, result;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setLocationLat(location.coords.latitude);\n              setLocationLong(location.coords.longitude);\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(fetch('https://httpbin.org/post', {\n                method: 'post',\n                mode: 'no-cors',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-type': 'application/json'\n                },\n                body: JSON.stringify(location)\n              }));\n\n            case 14:\n              result = _context.sent;\n              fireAddress.set({\n                location: address\n              }).then(function () {\n                console.log(\"Document successfully written!\");\n              }).catch(function (error) {\n                console.error(\"Error writing document: \", error);\n              });\n              console.log(result);\n              console.log(location.coords);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var text = 'Waiting..';\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  function showLocation() {\n    fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + locationLat + ',' + locationLong + '&key=' + 'AIzaSyANgMRwJSiVKGPdjshbjuavIYRuOg7dKvQ ').then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setAddress(responseJson.results[0].formatted_address);\n      setClicked(true);\n      console.log(address);\n    });\n    fireAddress.update({\n      location: firebase.firestore.FieldValue.arrayUnion(address)\n    }).then(function () {\n      console.log(\"Document successfully updated!\");\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n    fireAddress.onSnapshot(function (doc) {\n      var source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\n      console.log(source, \" data: \", doc.data());\n      setLastLocation(doc.data());\n      console.log(lastLocation.location);\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(\"button\", {\n    onClick: showLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Show my location\"), console.log(lastLocation), clicked == true ? React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 8\n    }\n  }, \"You are located at: \", address) : null, lastLocation.location.map(function (item) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 14\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, \" address: \", item));\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Yevheniia/Documents/Github_codes/location_app_test/my-app/App.js"],"names":["setStatusBarHidden","StatusBar","React","useState","useEffect","Location","initializeApp","firebase","App","locationLat","setLocationLat","locationLong","setLocationLong","errorMsg","setErrorMsg","address","setAddress","clicked","setClicked","lastLocation","setLastLocation","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","db","firestore","fireAddress","collection","doc","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","location","coords","latitude","longitude","fetch","method","mode","headers","body","JSON","stringify","result","set","then","console","log","catch","error","text","showLocation","response","json","responseJson","results","formatted_address","update","FieldValue","arrayUnion","onSnapshot","source","metadata","hasPendingWrites","data","styles","container","map","item","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { setStatusBarHidden, StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { Platform, Text, View, StyleSheet } from 'react-native';\nimport * as Location from 'expo-location';\nimport { initializeApp } from \"firebase/app\";\nimport firebase from 'firebase'\n\n\nexport default function App() {\n\n  const [locationLat, setLocationLat] = useState(null);\n  const [locationLong, setLocationLong] = useState(null)\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [address, setAddress] = useState('');\n  const [clicked, setClicked] = useState(false);\n  const [lastLocation, setLastLocation] = useState('')\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyBw0JiynMCdwmvU4R9HuB6mCOXCmwR8H0E\",\n    authDomain: \"locationapp-3efcb.firebaseapp.com\",\n    projectId: \"locationapp-3efcb\",\n    storageBucket: \"locationapp-3efcb.appspot.com\",\n    messagingSenderId: \"1020753340007\",\n    appId: \"1:1020753340007:web:31d1eeac64004d46bdd6c2\"\n  };\n  \n  // Initialize Firebase\n  if (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n  }\n   var db = firebase.firestore();\n  \n  let fireAddress = db.collection(\"test\").doc(\"locWaWWxNtucZmAIU5py\")\n\n  \n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocationLat(location.coords.latitude);\n      setLocationLong(location.coords.longitude);\n      \n    \n       \n      let result = await fetch('https://httpbin.org/post', {\n          method: 'post',\n          mode: 'no-cors',\n          headers: {\n            'Accept': 'application/json',\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(location)\n          \n      })\n      \n      \n  fireAddress.set({\n    location: address \n  })\n  .then(() => {\n    console.log(\"Document successfully written!\");\n  })\n  .catch((error) => {\n    console.error(\"Error writing document: \", error);\n  });\n      console.log(result)\n      console.log(location.coords)\n    })();\n  }, []);\n  \n\n  let text = 'Waiting..';\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  function showLocation(){\n    fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + locationLat + ',' + locationLong + '&key=' + 'AIzaSyANgMRwJSiVKGPdjshbjuavIYRuOg7dKvQ ')\n     .then((response) => response.json())\n     .then((responseJson) => {\n      setAddress(responseJson.results[0].formatted_address)\n      setClicked(true)\n       console.log(address)\n      \n   })\n  \n  fireAddress.update({\n    location: firebase.firestore.FieldValue.arrayUnion(address)\n})\n.then(() => {\n  console.log(\"Document successfully updated!\");\n})\n.catch((error) => {\n  console.error(\"Error writing document: \", error);\n});\nfireAddress.onSnapshot((doc) => {\n  var source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\n  console.log(source, \" data: \", doc.data());\n  setLastLocation( doc.data())\n  console.log(lastLocation.location)\n});\n   }\n\n   \n\n\n\n\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <Text>Open up App.js to start working on your app!</Text>\n      <button onClick={showLocation}>Show my location</button>\n      {console.log(lastLocation)}\n      {clicked == true ?\n       <p>You are located at: {address}</p> :null}\n      {lastLocation.location.map((item) =>{\n        \n      return(<View>\n      <Text> address: {item}</Text>\n      \n      </View>\n      )\n    })}\n      \n      <Text>Open up App.js to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}