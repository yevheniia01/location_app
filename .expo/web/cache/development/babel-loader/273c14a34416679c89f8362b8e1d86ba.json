{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yevheniia\\\\Documents\\\\Github_codes\\\\location_app_test\\\\my-app\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Location from 'expo-location';\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      locationLat = _useState2[0],\n      setLocationLat = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationLong = _useState4[0],\n      setLocationLong = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMsg = _useState6[0],\n      setErrorMsg = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      address = _useState8[0],\n      setAdress = _useState8[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location, result;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setLocationLat(location.coords.latitude);\n              setLocationLong(location.coords.longitude);\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(fetch('https://httpbin.org/post', {\n                method: 'post',\n                mode: 'no-cors',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-type': 'application/json'\n                },\n                body: JSON.stringify(location)\n              }));\n\n            case 14:\n              result = _context.sent;\n              console.log(result);\n              console.log(location.coords);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var text = 'Waiting..';\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  var showLocation = function showLocation() {\n    fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + location.coords.latitude + ',' + location.coords.longitude + '&key=' + fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + location.coords.latitude + ',' + location.coords.longitude + '&key=' + 'AIzaSyANgMRwJSiVKGPdjshbjuavIYRuOg7dKvQ  ').then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      var addressResult = responseJson;\n      setAdress(addressResult);\n      console.log(address);\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(\"button\", {\n    onClick: showLocation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Show my location\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Yevheniia/Documents/Github_codes/location_app_test/my-app/App.js"],"names":["StatusBar","React","useState","useEffect","Location","App","locationLat","setLocationLat","locationLong","setLocationLong","errorMsg","setErrorMsg","address","setAdress","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","location","coords","latitude","longitude","fetch","method","mode","headers","body","JSON","stringify","result","console","log","text","showLocation","then","response","json","responseJson","addressResult","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { Platform, Text, View, StyleSheet } from 'react-native';\nimport * as Location from 'expo-location';\n\nexport default function App() {\n\n  const [locationLat, setLocationLat] = useState(null);\n  const [locationLong, setLocationLong] = useState(null)\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [address, setAdress] = useState([])\n  \n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocationLat(location.coords.latitude);\n      setLocationLong(location.coords.longitude);\n      \n       \n      let result = await fetch('https://httpbin.org/post', {\n          method: 'post',\n          mode: 'no-cors',\n          headers: {\n            'Accept': 'application/json',\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(location)\n          \n      })\n      console.log(result)\n      console.log(location.coords)\n    })();\n  }, []);\n\n  let text = 'Waiting..';\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  const showLocation = () =>{\n    fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + location.coords.latitude + ',' + location.coords.longitude + '&key=' + fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + location.coords.latitude + ',' + location.coords.longitude + '&key=' + 'AIzaSyANgMRwJSiVKGPdjshbjuavIYRuOg7dKvQ  ')\n    .then((response) => response.json())\n    .then((responseJson) => {\n     let addressResult = responseJson\n      setAdress(addressResult)\n    console.log(address)  \n}))\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <button onClick={showLocation()}>Show my location</button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}