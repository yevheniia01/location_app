{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yevheniia\\\\Documents\\\\Github_codes\\\\location_app_test\\\\my-app\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Location from 'expo-location';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nexport default function App() {\n  var firebaseConfig = {\n    apiKey: \"AIzaSyBw0JiynMCdwmvU4R9HuB6mCOXCmwR8H0E\",\n    authDomain: \"locationapp-3efcb.firebaseapp.com\",\n    projectId: \"locationapp-3efcb\",\n    storageBucket: \"locationapp-3efcb.appspot.com\",\n    messagingSenderId: \"1020753340007\",\n    appId: \"1:1020753340007:web:31d1eeac64004d46bdd6c2\"\n  };\n  var app = initializeApp(firebaseConfig);\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location, result;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setLocationLat(location.coords.latitude);\n              setLocationLong(location.coords.longitude);\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(fetch('https://httpbin.org/post', {\n                method: 'post',\n                mode: 'no-cors',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-type': 'application/json'\n                },\n                body: JSON.stringify(location)\n              }));\n\n            case 14:\n              result = _context.sent;\n              console.log(result);\n              console.log(location.coords);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var text = 'Waiting..';\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  function showLocation() {\n    fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + locationLat + ',' + locationLong + '&key=' + 'AIzaSyANgMRwJSiVKGPdjshbjuavIYRuOg7dKvQ ').then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setAdress(responseJson.results[0].formatted_address);\n      setClicked(true);\n      console.log(address);\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(\"button\", {\n    onClick: showLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Show my location\"), console.log(address), clicked == true ? React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }\n  }, \"You are located at: \", address) : null, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Yevheniia/Documents/Github_codes/location_app_test/my-app/App.js"],"names":["StatusBar","React","useState","useEffect","Location","firebase","App","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","requestForegroundPermissionsAsync","status","setErrorMsg","getCurrentPositionAsync","location","setLocationLat","coords","latitude","setLocationLong","longitude","fetch","method","mode","headers","body","JSON","stringify","result","console","log","text","errorMsg","showLocation","locationLat","locationLong","then","response","json","responseJson","setAdress","results","formatted_address","setClicked","address","styles","container","clicked","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { Platform, Text, View, StyleSheet } from 'react-native';\nimport * as Location from 'expo-location';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nexport default function App() {\n\n  \n  \n  const firebaseConfig = {\n    apiKey: \"AIzaSyBw0JiynMCdwmvU4R9HuB6mCOXCmwR8H0E\",\n    authDomain: \"locationapp-3efcb.firebaseapp.com\",\n    projectId: \"locationapp-3efcb\",\n    storageBucket: \"locationapp-3efcb.appspot.com\",\n    messagingSenderId: \"1020753340007\",\n    appId: \"1:1020753340007:web:31d1eeac64004d46bdd6c2\"\n  };\n  \n  // Initialize Firebase\n  const app = initializeApp(firebaseConfig);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocationLat(location.coords.latitude);\n      setLocationLong(location.coords.longitude);\n      \n      \n       \n      let result = await fetch('https://httpbin.org/post', {\n          method: 'post',\n          mode: 'no-cors',\n          headers: {\n            'Accept': 'application/json',\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(location)\n          \n      })\n      console.log(result)\n      console.log(location.coords)\n    })();\n  }, []);\n  \n\n  let text = 'Waiting..';\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  function showLocation(){\n    fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + locationLat + ',' + locationLong + '&key=' + 'AIzaSyANgMRwJSiVKGPdjshbjuavIYRuOg7dKvQ ')\n     .then((response) => response.json())\n     .then((responseJson) => {\n      setAdress(responseJson.results[0].formatted_address)\n      setClicked(true)\n       console.log(address)\n      \n   })\n   }\n   \n  \n\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <Text>Open up App.js to start working on your app!</Text>\n      <button onClick={showLocation}>Show my location</button>\n      {console.log(address)}\n      {clicked == true ?\n       <p>You are located at: {address}</p> :null}\n      {/* {address.map((item) =>{\n        \n      return(<View>\n      <Text> address: {item.formatted_address}</Text>\n      \n      </View>\n      )\n    })} */}\n      \n      <Text>Open up App.js to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}