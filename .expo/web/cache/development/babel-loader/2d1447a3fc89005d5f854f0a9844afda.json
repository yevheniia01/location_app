{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yevheniia\\\\Documents\\\\Github_codes\\\\location_app_test\\\\my-app\\\\components\\\\Button.js\";\nimport { setStatusBarHidden, StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Location from 'expo-location';\nimport { initializeApp } from \"firebase/app\";\nimport firebase from 'firebase';\nexport default function Button(_ref) {\n  var locationLat = _ref.locationLat,\n      locationLong = _ref.locationLong;\n  var firebaseConfig = {\n    apiKey: \"AIzaSyBw0JiynMCdwmvU4R9HuB6mCOXCmwR8H0E\",\n    authDomain: \"locationapp-3efcb.firebaseapp.com\",\n    projectId: \"locationapp-3efcb\",\n    storageBucket: \"locationapp-3efcb.appspot.com\",\n    messagingSenderId: \"1020753340007\",\n    appId: \"1:1020753340007:web:31d1eeac64004d46bdd6c2\"\n  };\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  var db = firebase.firestore();\n  var fireAddress = db.collection(\"test\").doc(\"locWaWWxNtucZmAIU5py\");\n  var randoms = ['Yes', 'No', 'Maybe', 'random'];\n\n  function showLocation() {\n    fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + locationLat + ',' + locationLong + '&key=' + 'AIzaSyANgMRwJSiVKGPdjshbjuavIYRuOg7dKvQ ').then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      var random = randoms[Math.floor(Math.random() * randoms.length)];\n      setAddress(responseJson.results[0].formatted_address + random);\n      setClicked(true);\n      console.log(address);\n    });\n    fireAddress.set({\n      location: address\n    }).then(function () {\n      console.log(\"Document successfully written!\");\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n    fireAddress.update({\n      location: firebase.firestore.FieldValue.arrayUnion(address)\n    }).then(function () {\n      console.log(\"Document successfully updated!\");\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n    var coll = db.collection(\"test\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        console.log(doc.id, \" => \", doc.data().location);\n        setLastLocation(doc.data().location);\n        console.log(lastLocation);\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n    console.log(coll);\n  }\n\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(\"button\", {\n    onClick: showLocation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Yevheniia/Documents/Github_codes/location_app_test/my-app/components/Button.js"],"names":["setStatusBarHidden","StatusBar","React","useState","useEffect","Location","initializeApp","firebase","Button","locationLat","locationLong","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","db","firestore","fireAddress","collection","doc","randoms","showLocation","fetch","then","response","json","responseJson","random","Math","floor","setAddress","results","formatted_address","setClicked","console","log","address","set","location","catch","error","update","FieldValue","arrayUnion","coll","get","querySnapshot","forEach","id","data","setLastLocation","lastLocation"],"mappings":"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","sourcesContent":["import { setStatusBarHidden, StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Platform, Text, View, StyleSheet } from 'react-native';\r\nimport * as Location from 'expo-location';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebase from 'firebase';\r\n\r\nexport default function Button({locationLat, locationLong, }) {\r\n\r\n    const firebaseConfig = {\r\n        apiKey: \"AIzaSyBw0JiynMCdwmvU4R9HuB6mCOXCmwR8H0E\",\r\n        authDomain: \"locationapp-3efcb.firebaseapp.com\",\r\n        projectId: \"locationapp-3efcb\",\r\n        storageBucket: \"locationapp-3efcb.appspot.com\",\r\n        messagingSenderId: \"1020753340007\",\r\n        appId: \"1:1020753340007:web:31d1eeac64004d46bdd6c2\"\r\n      };\r\n      \r\n      // Initialize Firebase\r\n      if (!firebase.apps.length) {\r\n      firebase.initializeApp(firebaseConfig);\r\n      }\r\n       var db = firebase.firestore();\r\n      \r\n      let fireAddress = db.collection(\"test\").doc(\"locWaWWxNtucZmAIU5py\")\r\n    \r\n      var randoms = ['Yes', 'No', 'Maybe', 'random'];\r\n\r\n  function showLocation(){\r\n    fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + locationLat + ',' + locationLong + '&key=' + 'AIzaSyANgMRwJSiVKGPdjshbjuavIYRuOg7dKvQ ')\r\n     .then((response) => response.json())\r\n     .then((responseJson) => {\r\n      var random = randoms[Math.floor(Math.random() * randoms.length)];\r\n      setAddress(responseJson.results[0].formatted_address + random)\r\n      setClicked(true)\r\n       console.log(address)\r\n      \r\n   })\r\n   fireAddress.set({\r\n    location: address \r\n  })\r\n  .then(() => {\r\n    console.log(\"Document successfully written!\");\r\n  })\r\n  .catch((error) => {\r\n    console.error(\"Error writing document: \", error);\r\n  });\r\n  \r\n  fireAddress.update({\r\n    location: firebase.firestore.FieldValue.arrayUnion(address)\r\n})\r\n.then(() => {\r\n  console.log(\"Document successfully updated!\");\r\n})\r\n.catch((error) => {\r\n  console.error(\"Error writing document: \", error);\r\n});\r\nlet coll = db.collection(\"test\")\r\n.get()\r\n    .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n            // doc.data() is never undefined for query doc snapshots\r\n            console.log(doc.id, \" => \", doc.data().location);\r\n            setLastLocation(doc.data().location)\r\n            console.log(lastLocation)\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\nconsole.log(coll)\r\n\r\n   }\r\n    return (\r\n        <div>\r\n            <button onClick={showLocation()} />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}