{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yevheniia\\\\Documents\\\\Github_codes\\\\location_app_test\\\\my-app\\\\components\\\\MainButton.js\";\nimport { setStatusBarHidden, StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Location from 'expo-location';\nimport { initializeApp } from \"firebase/app\";\nimport firebase from 'firebase';\nexport default function MainButton(_ref) {\n  var locationLat = _ref.locationLat,\n      setLastLocation = _ref.setLastLocation,\n      lastLocation = _ref.lastLocation,\n      locationLong = _ref.locationLong,\n      address = _ref.address,\n      setAddress = _ref.setAddress,\n      setClicked = _ref.setClicked,\n      clicked = _ref.clicked;\n  var firebaseConfig = {\n    apiKey: \"AIzaSyBw0JiynMCdwmvU4R9HuB6mCOXCmwR8H0E\",\n    authDomain: \"locationapp-3efcb.firebaseapp.com\",\n    projectId: \"locationapp-3efcb\",\n    storageBucket: \"locationapp-3efcb.appspot.com\",\n    messagingSenderId: \"1020753340007\",\n    appId: \"1:1020753340007:web:31d1eeac64004d46bdd6c2\"\n  };\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  useEffect(function () {\n    var coll = db.collection(\"test\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        console.log(doc.id, \" => \", doc.data().location);\n        setLastLocation(doc.data().location);\n        console.log(lastLocation);\n      });\n    });\n  });\n  var db = firebase.firestore();\n  var fireAddress = db.collection(\"test\").doc(\"locWaWWxNtucZmAIU5py\");\n  var randoms = ['Yes', 'No', 'Maybe', 'random'];\n\n  function showLocation() {\n    fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + locationLat + ',' + locationLong + '&key=' + 'AIzaSyANgMRwJSiVKGPdjshbjuavIYRuOg7dKvQ ').then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      var random = randoms[Math.floor(Math.random() * randoms.length)];\n      setAddress(responseJson.results[0].formatted_address + random);\n      setClicked(true);\n      console.log(address);\n    });\n    fireAddress.set({\n      location: address\n    }).then(function () {\n      console.log(\"Document successfully written!\");\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n    fireAddress.update({\n      location: firebase.firestore.FieldValue.arrayUnion(address)\n    }).then(function () {\n      console.log(\"Document successfully updated!\");\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n    var coll = db.collection(\"test\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        console.log(doc.id, \" => \", doc.data().location);\n        setLastLocation(doc.data().location);\n        console.log(lastLocation);\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n    console.log(coll);\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.mainbutton,\n    onPress: showLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 18\n    }\n  }, \"Show my location\")));\n}\nvar styles = StyleSheet.create({\n  mainbutton: {\n    margin: '1rem',\n    border: '1px solid lightblue',\n    padding: '1rem',\n    borderRadius: '10px'\n  }\n});","map":{"version":3,"sources":["C:/Users/Yevheniia/Documents/Github_codes/location_app_test/my-app/components/MainButton.js"],"names":["setStatusBarHidden","StatusBar","React","useState","useEffect","Location","initializeApp","firebase","MainButton","locationLat","setLastLocation","lastLocation","locationLong","address","setAddress","setClicked","clicked","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","coll","db","collection","get","then","querySnapshot","forEach","doc","console","log","id","data","location","firestore","fireAddress","randoms","showLocation","fetch","response","json","responseJson","random","Math","floor","results","formatted_address","set","catch","error","update","FieldValue","arrayUnion","styles","mainbutton","StyleSheet","create","margin","border","padding","borderRadius"],"mappings":"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","sourcesContent":["import { setStatusBarHidden, StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Platform, Text, View, StyleSheet, Button, TouchableOpacity } from 'react-native';\r\nimport * as Location from 'expo-location';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebase from 'firebase';\r\n\r\nexport default function MainButton({locationLat, setLastLocation, lastLocation, locationLong, address, setAddress, setClicked, clicked }) {\r\n\r\n    const firebaseConfig = {\r\n        apiKey: \"AIzaSyBw0JiynMCdwmvU4R9HuB6mCOXCmwR8H0E\",\r\n        authDomain: \"locationapp-3efcb.firebaseapp.com\",\r\n        projectId: \"locationapp-3efcb\",\r\n        storageBucket: \"locationapp-3efcb.appspot.com\",\r\n        messagingSenderId: \"1020753340007\",\r\n        appId: \"1:1020753340007:web:31d1eeac64004d46bdd6c2\"\r\n      };\r\n      \r\n      // Initialize Firebase\r\n      if (!firebase.apps.length) {\r\n      firebase.initializeApp(firebaseConfig);\r\n      }\r\n\r\n      useEffect(()=>{\r\n        let coll = db.collection(\"test\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n            // doc.data() is never undefined for query doc snapshots\r\n            console.log(doc.id, \" => \", doc.data().location);\r\n            setLastLocation(doc.data().location)\r\n            console.log(lastLocation)\r\n        });\r\n    })\r\n      })\r\n    var db = firebase.firestore();\r\n      \r\n    let fireAddress = db.collection(\"test\").doc(\"locWaWWxNtucZmAIU5py\")\r\n    \r\n    \r\n    var randoms = ['Yes', 'No', 'Maybe', 'random'];\r\n\r\n  function showLocation(){\r\n    fetch('https://maps.googleapis.com/maps/api/geocode/json?address=' + locationLat + ',' + locationLong + '&key=' + 'AIzaSyANgMRwJSiVKGPdjshbjuavIYRuOg7dKvQ ')\r\n     .then((response) => response.json())\r\n     .then((responseJson) => {\r\n      var random = randoms[Math.floor(Math.random() * randoms.length)];\r\n      setAddress(responseJson.results[0].formatted_address + random)\r\n      setClicked(true)\r\n       console.log(address)\r\n      \r\n   })\r\n   fireAddress.set({\r\n    location: address \r\n  })\r\n  .then(() => {\r\n    console.log(\"Document successfully written!\");\r\n  })\r\n  .catch((error) => {\r\n    console.error(\"Error writing document: \", error);\r\n  });\r\n  \r\n  fireAddress.update({\r\n    location: firebase.firestore.FieldValue.arrayUnion(address)\r\n})\r\n.then(() => {\r\n  console.log(\"Document successfully updated!\");\r\n})\r\n.catch((error) => {\r\n  console.error(\"Error writing document: \", error);\r\n});\r\nlet coll = db.collection(\"test\")\r\n.get()\r\n    .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n            // doc.data() is never undefined for query doc snapshots\r\n            console.log(doc.id, \" => \", doc.data().location);\r\n            setLastLocation(doc.data().location)\r\n            console.log(lastLocation)\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\nconsole.log(coll)\r\n\r\n   }\r\n    return (\r\n        <View>\r\n            <TouchableOpacity style={styles.mainbutton} \r\n                              onPress={showLocation}> \r\n                 <Text>Show my location</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    mainbutton: {\r\n        margin: '1rem',\r\n        border: '1px solid lightblue',\r\n        padding: '1rem',\r\n        borderRadius: '10px'\r\n        \r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}